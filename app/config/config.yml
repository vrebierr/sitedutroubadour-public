imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    default_locale:  %locale%
    trust_proxy_headers: false # Should Request object should trust proxy headers (X_FORWARDED_FOR/HTTP_CLIENT_IP)
    session:         ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ FOSCommentBundle ]
    java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        yui_js:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar
        yui_css:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }

sensio_framework_extra:
    view:
        annotations: false

stof_doctrine_extensions:
    default_locale: fr_FR
    orm:
        default:
            tree: true
            timestampable: true
            sluggable: true

fos_user:
    db_driver:        orm # can be orm or odm
    firewall_name:    main
    user_class:       Application\Sonata\UserBundle\Entity\User

    group:
        group_class:  Application\Sonata\UserBundle\Entity\Group

    profile:  # Authentication Form
        form:
            type:               fos_user_profile
            name:               fos_user_profile_form
            validation_groups:  [Authentication] # Please note : this is not the default value

    registration:
        confirmation:
            from_email:
                address:        noreply@sitedutroubadour.fr
                sender_name:    Contact du Site du Troubadour

    resetting:
        email:
            from_email:
                address:        noreply@sitedutroubadour.fr
                sender_name:    "[Site du Troubadour] Votre mot de passe"

sonata_user:
    security_acl:     false
    class:
        user:         Application\Sonata\UserBundle\Entity\User
        group:        Application\Sonata\UserBundle\Entity\Group

    profile:  # Profile Form (firstname, lastname, etc ...)
        form:
            type:               application_sonata_user_profile
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            validation_groups:  [Profile]

    admin:                  # Admin Classes
        user:
            class:          Application\Sonata\UserBundle\Admin\Entity\UserAdmin
            controller:     SonataAdminBundle:CRUD
            translation:    SonataUserBundle

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        #sonata.admin_doctrine_orm.block.audit:
        #    contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.action:
        sonata.block.service.rss:

sonata_admin:
    title:      Administration
    title_logo: /bundles/sonataadmin/logo_title.png
    templates:
        # default global templates
        layout:  SdtCoreBundle:Admin:layout.html.twig
        ajax:    SonataAdminBundle::ajax_layout.html.twig

        # default actions templates, should extend a global templates
        list:    SonataAdminBundle:CRUD:list.html.twig
        show:    SonataAdminBundle:CRUD:show.html.twig
        edit:    SonataAdminBundle:CRUD:edit.html.twig
    dashboard:
        blocks:
            # display a dashboard block
            - { position: left, type: sonata.admin.block.admin_list }

            # Customize this part to add new block configuration
            - { position: right, type: sonata.block.service.text, settings: { content: "<h2>Welcome to the Sonata Admin</h2> <p>This is a <code>sonata.block.service.text</code> from the Block Bundle, you can create and add new block in these area by configuring the <code>sonata_admin</code> section.</p> <br /> For instance, here a RSS feed parser (<code>sonata.block.service.rss</code>):"} }
            - { position: right, type: sonata.block.service.rss, settings: { title: Sonata Project's Feeds, url: http://sonata-project.org/blog/archive.rss }}

ornicar_message:
    db_driver: orm
    thread_class: Sdt\MessageBundle\Entity\Thread
    message_class: Sdt\MessageBundle\Entity\Message

stfalcon_tinymce:
    include_jquery: false
    tinymce_jquery: false
    textarea_class: "tinymce"
    theme:
        simple:
            mode: "textareas"
            theme: "advanced"
            theme_advanced_buttons1: "mylistbox,mysplitbutton,bold,italic,underline,separator,strikethrough,justifyleft,justifycenter,justifyright,justifyfull,bullist,numlist,undo,redo,link,unlink,charmap,code"
            theme_advanced_buttons2: "formatselect,image"
            theme_advanced_buttons3: ""
            theme_advanced_toolbar_location: "top"
            theme_advanced_toolbar_align: "left"
            theme_advanced_statusbar_location: "bottom"
            plugins: "fullscreen,autosave"
            theme_advanced_buttons1_add: "fullscreen"
            theme_advanced_resizing : true

sonata_media:
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb
    contexts:
        default:  # the default context is mandatory
            download:
                strategy: sonata.media.security.public_strategy
                mode: http

            providers:
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.youtube

            formats:
                x-small: { width: 40 , quality: 70}
                small: { width: 100 , quality: 70}
                big:   { width: 768 , quality: 70}
        video:
            providers:
                - sonata.media.provider.youtube

            formats:
                big:   { width: 768 , quality: 70}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../../uploads/media
            create:     false

    pixlr:
        enabled:  true
        secret:   theSecretHash
        referrer: Application Name

fos_comment:
    db_driver: orm
    class:
        model:
            comment: Sdt\CommentBundle\Entity\Comment
            thread: Sdt\CommentBundle\Entity\Thread
    acl: true
    service:
        acl:
            thread:  fos_comment.acl.thread.roles
            comment: fos_comment.acl.comment.roles
        manager:
            thread:  fos_comment.manager.thread.acl
            comment: fos_comment.manager.comment.acl
        markup: markup.exercise_html_purifier
    acl_roles:
        comment:
            create: IS_AUTHENTICATED_REMEMBERED
            view: IS_AUTHENTICATED_ANONYMOUSLY
            edit: ROLE_ADMIN
            delete: ROLE_ADMIN
        thread:
            create: IS_AUTHENTICATED_REMEMBERED
            view: IS_AUTHENTICATED_ANONYMOUSLY
            edit: ROLE_ADMIN
            delete: ROLE_ADMIN
        vote:
            create: IS_AUTHENTICATED_REMEMBERED
            view: IS_AUTHENTICATED_ANONYMOUSLY
            edit: ROLE_ADMIN
            delete: ROLE_ADMIN

genemu_form:
    recaptcha:
        public_key:  6Lf6YNoSAAAAAHDm1yWut6OP46coeLOPldCtFmDE
        private_key: 6Lf6YNoSAAAAALASwRHp5T_awfSnnXR8cxKLSIL7

services:
    markup.exercise_html_purifier:
        class: FOS\CommentBundle\Markup\HtmlPurifier
        arguments: [ @exercise_html_purifier.default ]

    sonata.user.profile.form.type:
        class: Application\Sonata\UserBundle\Form\Type\ProfileType
        arguments: [%fos_user.model.user.class%]
        tags:
            - { name: form.type, alias: application_sonata_user_profile }

    twig.extension.debug:
        class: Twig_Extensions_Extension_Debug
        tags:
        - { name: 'twig.extension' }


jms_payment_core:
    secret: "{!_HNhsWE0T1i-cCQ,~*#z97"

jms_payment_paypal:
    username: ghuigh_1355519959_biz_api1.hotmail.fr
    password: 1355519982
    signature: AiPC9BjkCyDFQXbSkoZcgqH3hpacAotSSHtktzdKRHFu65bJNziRu0M9
    debug: true

white_october_breadcrumbs:
    separator:          '>'
    separatorClass:     divider
    listClass:          breadcrumb

hwi_oauth:
    # name of the firewall in which this bundle is active, this setting MUST be set
    firewall_name: main
    resource_owners:
        facebook:
            type:                facebook
            client_id:           342799845806305
            client_secret:       ac7c4f82deabc6812f22eeec6495c5c5
            scope:               ""
        google:
            type:                google
            client_id:           235960386918.apps.googleusercontent.com
            client_secret:       Nd5qB415hqYrE-gpZ2Ac3G6e
            scope:               "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"
    fosub:
        # try 30 times to check if a username is available (foo, foo1, foo2 etc)
        username_iterations: 30

        # mapping between resource owners (see below) and properties
        properties:
            facebook: facebook_id
            google: google_id
